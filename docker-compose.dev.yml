services:
  mainDB:
    container_name: postgres_container
    image: postgres
    restart: always
    env_file:
      - .env.dev
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '5432:5432'
    volumes:
      - ./vol:/db/main
    networks:
      - app-network

  testDB:
    container_name: postgres_test_container
    image: postgres
    restart: always
    env_file:
      - .env.dev
    environment:
      POSTGRES_USER: ${TEST_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${TEST_DATABASE_PASSWORD}
      POSTGRES_DB: ${TEST_DATABASE_NAME}
    ports:
      - '5433:5432' # Maps host port 5433 to container port 5432
    volumes:
      - ./vol_test:/db/test # Separate volume for test database
    networks:
      - app-network

  redis_cache:
    container_name: redis_cache_container
    image: redis
    restart: always
    ports:
      - '6379:6379'
    networks:
      - app-network

  redis_core:
    container_name: redis_core_container
    image: redis
    restart: always
    ports:
      - '6380:6379'
    networks:
      - app-network
  # ticketBottle_api_dev:
  #   container_name: ticketbottle_api_dev
  #   image: ticketbottle_api_dev:latest
  #   build:
  #     context: .
  #     target: development
  #   command: npm run start:dev
  #   ports:
  #     - ${PORT}:${PORT}
  #   depends_on:
  #     - mainDB
  #     - redis_cache
  #     - redis_core
  #   volumes:
  #     - ./:/usr/src/app
  #   restart: unless-stopped

networks:
  app-network:
    driver: bridge
