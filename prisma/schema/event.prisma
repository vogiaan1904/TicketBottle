enum EventStatus {
  DRAFT
  PUBLISHED
  CANCELLED
}

enum Category {
  MUSIC
  SPORT
  THEATERS_AND_ART
  OTHER
}

model Event {
  id                    String        @id @default(uuid())
  startSellDate         DateTime
  endSellDate           DateTime
  isFree                Boolean
  maxTicketsPerCustomer Int
  isNewTrending         Boolean       @default(false)
  configStatus          EventStatus   @default(DRAFT)
  eventInfo             EventInfo?
  ticketClasses         TicketClass[]
  tickets               Ticket[]
  orders                Order[]
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  staffs                StaffEvent[]
  categories            Category[]

  @@map("events")
}

model EventInfo {
  id          String     @id @default(uuid())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  location    String
  thumbnail   String
  eventId     String     @unique
  event       Event      @relation(fields: [eventId], references: [id], onDelete: Cascade)
  organizer   Organizer? @relation(fields: [organizerId], references: [id])
  organizerId String?

  @@map("event_infos")
}

// model EventsCategories {
//   categoryType CategoryType
//   eventId      String
//   category     Category     @relation(fields: [categoryType], references: [type], onDelete: Cascade)
//   event        Event        @relation(fields: [eventId], references: [id], onDelete: Cascade)

//   @@id([categoryType, eventId])
//   @@map("events_categories")
// }

// model Category {
//   id          String             @id @default(uuid())
//   type        CategoryType       @unique
//   description String?
//   events      EventsCategories[]

//   @@map("categories")
// }

// model UserEventHistory {
//   id        String       @id @default(uuid())
//   userId    String
//   eventId   String
//   category  CategoryType
//   createdAt DateTime     @default(now())

//   user  User  @relation(fields: [userId], references: [id])
//   // Assuming you have an Event model:
//   event Event @relation(fields: [eventId], references: [id])

//   @@map("user_event_histories")
// }

model Organizer {
  id          String      @id @default(uuid())
  name        String      @unique
  description String
  email       String?     @unique
  phone       String?
  address     String?
  thumbnail   String?
  events      EventInfo[]

  @@map("organizers")
}
