enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum TransactionStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum TransactionAction {
  BUY_TICKET
}

model Transaction {
  id        String            @id @default(uuid())
  code      BigInt            @unique
  refCode   String            @unique
  action    TransactionAction @default(BUY_TICKET)
  gateway   String
  amount    Float
  status    TransactionStatus @default(PENDING)
  createdAt DateTime          @default(now())
  order     Order?
  details   Json

  @@map("transactions")
}

model Order {
  id            String        @id @default(uuid())
  code          String        @unique
  orderDetails  OrderDetail[]
  totalCheckOut Float
  email         String
  status        OrderStatus   @default(PENDING)
  userId        String
  eventId       String
  transactionId String        @unique
  transaction   Transaction   @relation(fields: [transactionId], references: [id])
  user          User          @relation(fields: [userId], references: [id])
  event         Event         @relation(fields: [eventId], references: [id])
  createdAt     DateTime      @default(now())

  @@map("orders")
}

model OrderDetail {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  ticketId  String   @unique
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  amount    Float?
  createdAt DateTime @default(now())

  @@map("order_details")
}
