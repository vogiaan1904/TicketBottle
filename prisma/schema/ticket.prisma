model TicketClass {
  id            String            @id @default(uuid())
  name          String
  status        TicketClassStatus @default(AVAILABLE)
  totalQuantity Int
  soldQuantity  Int               @default(0)
  description   String
  price         Float
  tickets       Ticket[]
  eventId       String
  event         Event             @relation(fields: [eventId], references: [id], onDelete: Cascade)
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  @@unique([name, eventId])
  @@map("ticket_classes")
}

model Ticket {
  id            String       @id @default(uuid())
  serialNumber  String       @unique @default(cuid())
  orderDetail   OrderDetail?
  isCheckIn     Boolean      @default(false)
  checkInAt     DateTime?
  eventId       String
  ticketClassId String
  event         Event        @relation(fields: [eventId], references: [id], onDelete: Cascade)
  ticketClass   TicketClass  @relation(fields: [ticketClassId], references: [id], onDelete: Cascade)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@map("tickets")
}

enum TicketClassStatus {
  AVAILABLE
  SOLD_OUT
}
